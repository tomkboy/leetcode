Enter file contents here
// merge intervals.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include<vector>
#include<iostream>
#include<algorithm>
using namespace std;

struct interval{
	int start;
	int end;
	interval():start(0),end(0){}
	interval(int a,int b):start(a),end(b){}
};
bool cmp(interval a,interval b)
{
	if(a.start==b.start)
		return a.end<b.end?1:0;
		//return a.end<b.end;
	else
		return a.start<b.start;
}
vector<interval> merge(vector<interval>& digits)
{
	//vector<interval> res;
	//int len=digits.size();
	//for(int i=0;i<len;i++)
	//{
	//	interval temp=digits[i];
	//	if(temp.end<digits[i+1].start)
	//		res.push_back(temp);
	//		//continue;
	//	else
	//	{
	//		if(temp.end<digits[i+1].end)
	//		{
	//			temp.end=digits[i+1].end;
	//			res.push_back(temp);
	//			i++;
	//		}
	//		else
	//			i++;
	//	}
	//}
	int len=digits.size();
	vector<interval> res;

	sort(digits.begin(),digits.end(),cmp);
	if(len==0)
		return res;
	interval temp=digits[0];
	for(int i=1;i<len;i++)
	{
		if(digits[i].start<=temp.end)
			temp.end=max(digits[i].end,temp.end);
		else
		{
			res.push_back(temp);
			temp=digits[i];
		}
	}
	res.push_back(temp);
	return res;
}

int main()
{
	interval a(1,3),b(2,5),c(6,7),d(7,9);
	vector<interval> res;
	res.push_back(b);
	res.push_back(a);
	res.push_back(c);
	res.push_back(d);
	vector<interval> temp(merge(res));
	int len=temp.size();
	for(int i=0;i<len;i++)
	{
		interval tmp=temp[i];
		cout<<tmp.start<<" "<<tmp.end<<" ";
	}

}
int _tmain(int argc, _TCHAR* argv[])
{
	return 0;
}

